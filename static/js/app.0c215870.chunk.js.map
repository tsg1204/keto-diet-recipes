{"version":3,"sources":["pages/CategoriesPage.js","pages/CategoryMealsPage.js","pages/MealDetailPage.js","pages/FavoritePage.js","navigation/AppNavigator.js","App.js","web-build/register-service-worker.js","assets/fonts/OpenSans-Regular.ttf","assets/fonts/OpenSans-Bold.ttf"],"names":["styles","StyleSheet","create","container","flex","justifyContent","alignItems","borderColor","width","wp","height","hp","CategoriesPage","props","console","log","SafeAreaView","style","View","Text","Button","title","onPress","navigation","navigate","CategoryMealPage","MealDetailPage","FavoritesPage","AppNavigator","createStackNavigator","Categories","CategoryMeals","screen","CategoryMealsPage","MealDetails","FavoriteMeal","FavoritePage","createAppContainer","fetchFonts","Font","require","App","useState","fontLoaded","setFontLoaded","AppLoading","startAsync","onFinish","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","module","exports"],"mappings":"sNAwBMA,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZC,YAAa,OACbC,MAAOC,YAAG,QACVC,OAAQC,YAAG,WAIAC,EA5BQ,SAAAC,GAEnB,OADAC,QAAQC,IAAI,gCAAiCF,GAE3C,kBAACG,EAAA,EAAD,CAAcC,MAAOjB,EAAOG,WAC1B,kBAACe,EAAA,EAAD,CAAMD,MAAOjB,EAAOG,WACpB,kBAACgB,EAAA,EAAD,iDACA,kBAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WAClCT,EAAMU,WAAWC,SAAS,oBAE9B,kBAACJ,EAAA,EAAD,CAAQC,MAAM,wBAAwBC,QAAS,WAC7CT,EAAMU,WAAWC,SAAS,sBCH9BxB,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,eAAgB,SAChBC,WAAY,YAIDmB,EAnBU,SAAAZ,GACvB,OACE,kBAACK,EAAA,EAAD,CAAMD,MAAOjB,EAAOG,WAClB,kBAACgB,EAAA,EAAD,gCACA,kBAACC,EAAA,EAAD,CAAQC,MAAM,sBAAsBC,QAAS,WAC3CT,EAAMU,WAAWC,SAAS,oBCG5BxB,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,eAAgB,SAChBC,WAAY,YAIDoB,EAhBQ,SAAAb,GACrB,OACE,kBAACK,EAAA,EAAD,CAAMD,MAAOjB,EAAOG,WAClB,kBAACgB,EAAA,EAAD,gCCKAnB,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,eAAgB,SAChBC,WAAY,YAIDqB,EAhBO,SAAAd,GACpB,OACE,kBAACK,EAAA,EAAD,CAAMD,MAAOjB,EAAOG,WAClB,kBAACgB,EAAA,EAAD,8BCGAS,EAAeC,YAAqB,CACxCC,WAAYlB,EACZmB,cAAe,CACbC,OAAQC,GAEVC,YAAaR,EACbS,aAAcC,IAGDC,+BAAmBT,G,kCCJlC,IAAMU,EAAa,WAEjB,OAAOC,IAAe,CACpB,YAAaC,EAAQ,KACrB,iBAAkBA,EAAQ,QAIf,SAASC,IAAO,IAAD,EAEQC,oBAAS,GAFjB,WAErBC,EAFqB,KAETC,EAFS,KAI5B,OAAKD,EAUH,kBAAC,IAAD,KACE,kBAAC,EAAD,OATA,kBAACE,EAAA,EAAD,CACEC,WAAYR,EACZS,SAAU,kBAAMH,GAAc,MAYvB3C,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,eAAgB,SAChBC,WAAY,a,+DC5CZ,kBAAmB0C,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,4CAA6C,CAAEC,MAAO,wBAC/DC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACd3C,QAAQyC,KAAK,oCAAqCE,U,oBCV1DC,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,8B","file":"static/js/app.0c215870.chunk.js","sourcesContent":["import React from 'react';\nimport { View, Text, Button, StyleSheet , SafeAreaView} from 'react-native';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n } from 'react-native-responsive-screen';\n\nconst CategoriesPage = props => {\n    console.log('props from CategoriesScreen: ', props)\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.container}>\n        <Text>The Categories Page! Testing responsive.</Text>\n        <Button title=\"Go to Meals!\" onPress={() => {\n            props.navigation.navigate('CategoryMeals');\n        }} />\n        <Button title=\"Go to Favorite Meals!\" onPress={() => {\n          props.navigation.navigate('FavoriteMeal');\n      }} />\n      </View>      \n      </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'grey',\n    width: wp('100%'),\n    height: hp('100%')\n  }\n});\n\nexport default CategoriesPage;","import React from 'react';\nimport { View, Text, StyleSheet, Button } from 'react-native';\n\nconst CategoryMealPage = props => {\n  return (\n    <View style={styles.container}>\n      <Text>The Category Meal Page!</Text>\n      <Button title=\"Go to Meal Details!\" onPress={() => {\n        props.navigation.navigate('MealDetails');\n    }} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nexport default CategoryMealPage;","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nconst MealDetailPage = props => {\n  return (\n    <View style={styles.container}>\n      <Text>The Meal Detail Page!</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nexport default MealDetailPage;","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nconst FavoritesPage = props => {\n  return (\n    <View style={styles.container}>\n      <Text>The Favorites Page!</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nexport default FavoritesPage;","\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nimport CategoriesPage from '../pages/CategoriesPage';\nimport CategoryMealsPage from '../pages/CategoryMealsPage';\nimport MealDetailPage from '../pages/MealDetailPage';\nimport FavoritePage from '../pages/FavoritePage';\n\nconst AppNavigator = createStackNavigator({\n  Categories: CategoriesPage,\n  CategoryMeals: {\n    screen: CategoryMealsPage\n  },\n  MealDetails: MealDetailPage,\n  FavoriteMeal: FavoritePage\n});\n\nexport default createAppContainer(AppNavigator);","import React, { useState } from 'react';\nimport { Text, View , StyleSheet} from 'react-native';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport { SafeAreaProvider , initialWindowSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n } from 'react-native-responsive-screen';\n import Constants from 'expo-constants';\n\n//react native navigation https://reactnavigation.org/docs/4.x/getting-started/\nimport AppNavigator from './navigation/AppNavigator';\n\nconst fetchFonts = () => {\n  //got google fonts for the app \n  return Font.loadAsync({\n    'open-sans': require('./assets/fonts/OpenSans-Regular.ttf'),\n    'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf')\n  });\n};\n\nexport default function App() {\n  // useState to load fonts\n  const [fontLoaded, setFontLoaded] = useState(false);\n  //from example: have to use AppLoading component of Expo so fonts will be loaded first\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={() => setFontLoaded(true)}\n      />\n    );\n  };\n\n  return (\n    <SafeAreaProvider>\n      <AppNavigator />\n    </SafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/keto-diet-recipes/expo-service-worker.js', { scope: '/keto-diet-recipes/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Bold.ttf\";"],"sourceRoot":""}