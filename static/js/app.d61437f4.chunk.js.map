{"version":3,"sources":["data/data.js","store/actions/recipes.js","pages/CategoriesPage.js","pages/CategoryRecipePage.js","components/ShowActionSheetButton.tsx","components/HeaderButton.js","pages/RecipeDetailPage.js","pages/FavoritesPage.js","utils/helper.js","pages/CaloriesCalculator.js","pages/CalculationResultPage.js","navigation/AppNavigator.js","store/reducers/recipesReducer.js","store/reducers/singleRecipeReducer.js","App.js","web-build/register-service-worker.js","assets/fonts/OpenSans-Regular.ttf","assets/fonts/OpenSans-Bold.ttf"],"names":["Colors","MEALS","id","category","title","imageUrl","duration","ingredients","steps","favorite","ROOT_URL","fetchFavoriteRecipes","dispatch","axios","get","then","response","type","payload","data","catch","error","console","log","screenOptions","Dimensions","width","headerTitle","headerStyle","backgroundColor","headerTintColor","styles","StyleSheet","create","container","flex","marginTop","Constants","statusBarHeight","justifyContent","alignItems","gridItem","margin","wp","borderColor","borderWidth","borderRadius","fontFamily","fontSize","hp","height","color","textAlign","paddingTop","CategoriesPage","props","catList","useSelector","state","recipes","categories","useDispatch","useEffect","SafeAreaView","style","FlatList","keyExtractor","item","_id","sort","a","b","renderItem","itemData","TouchableOpacity","onPress","navigation","navigate","categoryId","catTitle","View","Text","toUpperCase","navData","route","params","padding","listItem","overflow","marginVertical","marginHorizontal","Platform","OS","bgImage","listRow","flexDirection","listHeader","listDetail","paddingHorizontal","titleContainer","paddingVertical","CategoryRecipePage","catId","ListItem","items","image","insideId","itemId","recipeTitle","key","ImageBackground","source","uri","numberOfLines","fetchRecipes","testId","icon","name","MaterialIcons","size","_anchorRef","React","_showActionSheet","withAnchor","withTitle","withMessage","withIcons","withSeparators","withCustomStyles","onSelection","showActionSheetWithOptions","icons","undefined","message","textStyle","fontWeight","titleTextStyle","messageTextStyle","containerStyle","anchor","current","findNodeHandle","options","cancelButtonIndex","destructiveButtonIndex","tintIcons","showSeparators","buttonIndex","this","Entypo","Button","ref","defaultProps","CustomHeaderButton","IconComponent","Ionicons","iconSize","children","toggleFav","isFavorite","headerRight","HeaderButtonComponent","HeaderButton","iconName","imageContainer","details","marginLeft","ConnectedApp","connectActionSheet","ASProps","ASState","currentRecipeIsFavorite","favoriteRecipes","some","recipe","selectedItem","recId","fetchRecipeDetails","toggleFavoriteHandler","useCallback","recipeId","setParams","body","put","toggleFavorite","ScrollView","map","ingredient","step","FavoritesPage","length","activityIndicator","dailyCalories","activity","toFixed","formControl","label","marginStart","input","borderBottomColor","borderBottomWidth","alignContent","pickerContainer","calculateButtonContainer","resetButtonContainer","calculateButtonText","checkBoxContainer","separator","hairlineWidth","marginBottom","ageWeight","CaloriesCalculator","reset","useState","gender","setGender","age","setAge","weight","setWeight","feet","setFeet","inches","setInches","setActivityFactor","setDailyCalories","inputs","setInputs","focusNextField","focus","calculateCalories","parseInt","daily","menBMR","womenBMR","checked","TextInput","autoCapitalize","autoCorrect","placeholder","returnKeyType","blurOnSubmit","value","keyboardType","onChangeText","text","onSubmitEditing","Picker","minHeight","selectedValue","onValueChange","itemValue","itemIndex","Item","NaN","resetButton","CalculationResultPage","result","push","defaultNavOptions","headerTitleStyle","headerBackTitleStyle","AppStackNavigator","createStackNavigator","AppNavigator","Navigator","Screen","component","categoriesPageOptions","categoryRecipePageOptions","RecipeDetailPage","recipeDetailsPageOptions","path","FavStackNavigator","FavNavigator","favoritesPageOptions","CalculatorStackNavigator","CalcNavigator","calculatorPageOptions","calculationResultPageOptions","initialParams","Tab","createBottomTabNavigator","AppTabs","initialRouteName","tabBarOptions","activeTintColor","tabBarLabel","tabBarIcon","DEFAULT_STATE","favoriteRecipe","date_created","testRecipes","rootReducer","combineReducers","action","existingIndex","findIndex","updatedFavRecipes","splice","find","concat","store","createStore","applyMiddleware","ReduxThunk","prefix","Linking","makeUrl","config","RecipeDetails","screens","fetchFonts","Font","require","App","fontLoaded","setFontLoaded","useRef","getInitialState","useLinking","prefixes","isReady","setIsReady","initialState","setInitialState","NavigationContainer","AppLoading","startAsync","onFinish","navigator","window","addEventListener","serviceWorker","register","scope","info","module","exports"],"mappings":"4TAAaA,G,OACG,WADHA,EAEK,UAaLC,EAAQ,CACnB,CACEC,GAAI,IACJC,SAAU,CAAC,KACXC,MAAO,qCACPC,SAAU,qHACVC,SAAU,GACVC,YAAa,CACX,yBACA,yBACA,gDACA,iCACA,mCACA,iCACA,+BACA,6BAEFC,MAAO,CACL,kHACA,0LACA,sIAEFC,UAAU,GAEZ,CACEP,GAAI,IACJC,SAAU,CAAC,IAAK,KAChBC,MAAO,uBACPC,SAAU,yGACVC,SAAU,EACVC,YAAa,CACX,wCACA,0BACA,kBACA,0BACA,kCACA,uCACA,kEACA,6DACA,sBACA,qBACA,+BAEHC,MAAO,CACJ,4LACA,4aACA,0PAEFC,UAAU,GAEZ,CACEP,GAAI,IACJC,SAAU,CAAC,KACXC,MAAO,2BACPC,SAAU,6FACVC,SAAU,GACVC,YAAa,CACX,gCACA,gCACA,iCACA,qCACA,uCACA,0BACA,mBACA,yBACA,mBACA,0BACA,uBAEFC,MAAO,CACL,kVACA,4EACA,wGAEFC,UAAU,GAEZ,CACEP,GAAI,IACJC,SAAU,CAAC,KACXC,MAAO,kCACPC,SAAU,mHACVC,SAAU,GACVC,YAAa,CACX,2CACA,uBACA,+CACA,kCACA,sCACA,4BACA,4BAEFC,MAAO,CACL,4JACA,0NACA,0HAEFC,UAAU,GAEZ,CACEP,GAAI,IACJC,SAAU,CAAC,KACXC,MAAO,qCACPC,SAAU,sHACVC,SAAU,GACVC,YAAa,CACX,mBACA,iCACA,4BACA,2BACA,mCACA,uCACA,8BAEFC,MAAO,CACL,oPACA,yIACA,sNAEFC,UAAU,GAEZ,CACEP,GAAI,IACJC,SAAU,CAAC,KACXC,MAAO,iCACPC,SAAU,kHACVC,SAAU,GACVC,YAAa,CACX,6CACA,2EACA,6CACA,6BACA,SACA,6BACA,mDACA,4BACA,oDACA,0BACA,8BAEFC,MAAO,CACL,+OACA,2iBACA,oLAEFC,UAAU,GAEZ,CACEP,GAAI,IACJC,SAAU,CAAC,IAAI,KACfC,MAAO,0CACPC,SAAU,iIACVC,SAAU,GACVC,YAAa,CACX,sBACA,qFACA,0CACA,kBACA,mCACA,g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","file":"static/js/app.d61437f4.chunk.js","sourcesContent":["export const Colors = {\n  primaryColor: \"#8bc34a\",\n  secondaryColor: \"#795548\" \n}\n\nexport const CATEGORIES = [\n  {id: \"1\", title: \"15 minute meals\"},\n  {id: \"2\", title: \"Low carb\"},\n  {id: \"3\", title: \"Quick & Easy\"},\n  {id: \"4\", title:\"Refined sugar\"},\n  {id: \"5\", title: \"Slow Cooker\"},\n  {id: \"6\", title: \"Vegetarian\"},\n  {id: \"7\", title: \"Vegan\"}\n];\n\nexport const MEALS = [\n  {\n    id: \"1\",\n    category: [\"1\"],\n    title: \"Chilli, pea, bacon and fetta pasta\",\n    imageUrl: \"https://img.taste.com.au/yN_83Ze6/w643-h428-cfill-q90/taste/2016/11/chilli-pea-bacon-and-fetta-pasta-105956-1.jpeg\",\n    duration: 10,//duration\n    ingredients: [\n      \"375g orecchiette pasta\",\n      \"1 1/2 cups frozen peas\",\n      \"175g shortcut bacon rashers, trimmed, chopped\",\n      \"4 garlic cloves, thinly sliced\",\n      \"1 long red chilli, thinly sliced\",\n      \"80g marinated fetta, reserving\",\n      \"2 tablespoons marinating oil\",\n      \"1/2 cup fresh mint leaves\"\n    ],\n    steps: [\n      \"Cook pasta following packet directions until tender, adding peas for the last 2 minutes of cooking time. Drain.\",\n      \"Meanwhile, heat olive oil in a large, deep frying pan over medium-high heat. Add bacon and garlic. Cook for 4 minutes or until golden. Add chilli. Cook for 1 minute or until softened.\",\n      \"Add pasta, crumbled fetta, reserved marinating oil and mint to bacon mixture. Season with salt and pepper. Toss to combine. Serve.\"\n    ],\n    favorite: false\n  },\n  {\n    id: \"2\",\n    category: [\"1\", \"3\"],\n    title: \"Burgers with the lot\",\n    imageUrl: \"https://img.taste.com.au/CSuK5ujx/w643-h428-cfill-q90/taste/2016/11/burgers-with-the-lot-101230-1.jpeg\",\n    duration: 6,//duration\n    ingredients: [\n      \"150g canned beetroot, drained, grated\",\n      \"2 tablespoons olive oil\",\n      \"500g beef mince\",\n      \"1 garlic clove, crushed\",\n      \"Finely grated zest of 1/2 lemon\",\n      \"1 tablespoon chopped rosemary leaves\",\n      \"2 tablespoons marinating oil1 tablespoon chopped oregano leaves\",\n      \"1/2 cup fresh mint leav4 English muffins, split, toastedes\",\n      \"1 cup rocket leaves\",\n      \"2 tomatoes, sliced\",\n      \"4 eggs, fried sunny-side up\"\n    ],\n   steps: [\n      \"To make the beetroot relish, combine beetroot with 1 tbs olive oil. Season.ook pasta following packet directions until tender, adding peas for the last 2 minutes of cooking time. Drain.\",\n      \"Combine the beef with the garlic, lemon zest and herbs, then season. Use your hands to shape mixture into four 9cm patties. Heat remaining 1 tbs oil in a frypan over medium heat and cook for 3 minutes each side or until cooked to your liking.Meanwhile, heat olive oil in a large, deep frying pan over medium-high heat. Add bacon and garlic. Cook for 4 minutes or until golden. Add chilli. Cook for 1 minute or until softened.\",\n      \"Layer the muffin bases with rocket, tomato, beetroot relish, patties and eggs, then season and top with muffin lids.Add pasta, crumbled fetta, reserved marinating oil and mint to bacon mixture. Season with salt and pepper. Toss to combine. Serve.\"\n    ],\n    favorite: false\n  },\n  {\n    id: \"3\",\n    category: [\"2\"],\n    title: \"Olive oil poached salmon\",\n    imageUrl: \"https://img.taste.com.au/lESTs8vn/w643-h428-cfill-q90/taste/2016/11/olive-oil-84695-2.jpeg\",\n    duration: 45,//duration\n    ingredients: [\n      \"2 small lemons, thinly sliced\",\n      \"8 sprigs fresh basil, trimmed\",\n      \"2 garlic cloves, thinly sliced\",\n      \"1 teaspoon whole black peppercorns\",\n      \"1 tablespoon capers, roughly chopped\",\n      \"4 (750g) salmon fillets\",\n      \"3 cups olive oil\",\n      \"Baby spinach, to serve\",\n      \"Tomato, to serve\",\n      \"Kalamata olives, to ser\",\n      \"Red onion, to serve\"\n    ],\n    steps: [\n      \"Preheat oven to 130°C/110°C fan-forced. Place half the lemon slices over the base of an 8 cup-capacity ovenproof dish. Top with half the basil, half the garlic, half the peppercorns and half the capers. Place fish in dish. Top with remaining basil, garlic, peppercorns and capers. Pour oil over fish (oil should just cover fish).\",\n      \"Bake fish for 40 to 45 minutes for medium or until cooked to your liking.\",\n      \"Using a slotted spoon, transfer fish to a plate. Flake. Serve with lemon slices and spinach mixture.\"\n    ],\n    favorite: false\n  },\n  {\n    id: \"4\",\n    category: [\"3\"],\n    title: \"Lemon haloumi with fried capers\",\n    imageUrl: \"https://img.taste.com.au/3leubigm/w720-h480-cfill-q80/taste/2016/11/lemon-haloumi-with-fried-capers-72418-1.jpeg\",\n    duration: 10,//duration\n    ingredients: [\n      \"1 1/2 tablespoons extra virgin olive oil\",\n      \"180g haloumi, sliced\",\n      \"2 small red birdseye chillies, thinly sliced\",\n      \"2 teaspoons drained baby capers\",\n      \"1 teaspoon finely grated lemon rind\",\n      \"2 tablespoons lemon juice\",\n      \"80g mixed lettuce leaves\"\n    ],\n    steps: [\n      \"Heat 2 teaspoons oil in a large frying pan over medium-high heat. Cook haloumi, in batches, for 2 minutes each side or until golden. Transfer to a plate.\",\n      \"Heat remaining oil in pan. Add chilli and capers. Cook, stirring, for 3 to 5 minutes or until capers are heated through and chilli is golden. Add rind. Cook, stirring, for 1 minute. Stir in juice. Bring to a simmer.\",\n      \"Arrange haloumi and lettuce on a serving plate. Drizzle with hot lemon mixture. Season with pepper. Serve immediately.\"\n    ],\n    favorite: false\n  },\n  {\n    id: \"5\",\n    category: [\"4\"],\n    title: \"Sugar-free mango and coconut balls\",\n    imageUrl: \"https://img.taste.com.au/enssRrT8/w643-h428-cfill-q90/taste/2018/12/sugar-free-mango-and-coconut-balls-145720-2.jpg\",\n    duration: 20,//duration\n    ingredients: [\n      \"125g dried mango\",\n      \"50g (2/3 cup) shredded coconut\",\n      \"50g (1/2 cup) rolled oats\",\n      \"145g (1 cup) raw cashews\",\n      \"60g (3/4 cup) desiccated coconut\",\n      \"1 tablespoon finely grated lime zest\",\n      \"1 teaspoon vanilla extract\"\n    ],\n    steps: [\n      \"Use kitchen scissors to cut the mango into small (about 1.5cm) pieces. Place in a heatproof bowl and pour 125 ml (½ cup) of boiling water. Set aside for 10-15 minutes, stirring occasionally, or until mango has softened and water absorbed.\",\n      \"Place the shredded coconut in a frying pan and stir over medium heat for about 3 minutes or until golden. Transfer to a plate to cool.\",\n      \"Process the oats a food processor until well chopped. Add the cashews, desiccated coconut, lime zest, vanilla, a pinch of salt and mango (with any water that may not have absorbed). Process until well combined.\"\n    ],\n    favorite: false\n  },\n  {\n    id: \"6\",\n    category: [\"4\"],\n    title: \"Better-for-you banana pancakes\",\n    imageUrl: \"https://img.taste.com.au/ae10R411/w643-h428-cfill-q90/taste/2018/01/better-for-you-banana-pancakes-134286-1.jpg\",\n    duration: 50,//duration\n    ingredients: [\n      \"100g mashed banana (about 1 medium banana)\",\n      \"150g (1 cup) wholemeal plain flour or purple wheat plain flour (see tip)\",\n      \"60g (1/2 cup) almond meal or hazelnut meal\",\n      \"1 teaspoon ground cinnamon\",\n      \"4 eggs\",\n      \"150ml milk kefir (see tip)\",\n      \"1 tablespoon virgin macadamia oil or coconut oil\",\n      \"2 teaspoons baking powder\",\n      \"125g (1/2 cup) fresh ricotta, to serve (optional)\",\n      \"Mixed berries, to serve\",\n      \"Pure maple syrup, to serve\"\n    ],\n    steps: [\n      \"Place the banana, flour, nut meal, cinnamon, eggs, kefir and 2 tsp oil in a blender or a food processor. Blend or process until smooth and well combined. Add the baking powder and process for a further 5-10 seconds, until just combined.\",\n      \"Heat a non-stick frying pan over medium-high heat. Add 1 tsp of the remaining oil. Pour 1/4-cupful of batter into the pan and gently swirl to create a pancake about 12cm in diameter. Cook for 1-2 minutes, until bubbles begin to form on the surface and the pancake is golden underneath. Carefully flip and cook for a further 1-2 minutes, until golden on both sides and cooked through. Transfer to a plate and cover loosely with foil to keep warm. Repeat with the remaining mixture (and remaining 1 tsp oil, if needed) until all the batter has been used.\",\n      \"Divide the pancakes among serving plates. Top each stack with 11 ⁄2 tbs ricotta, if you like. Scatter with the mixed berries and serve with a light drizzle of maple syrup.\"\n    ],\n    favorite: false\n  },\n  {\n    id: \"7\",\n    category: [\"3\",\"2\"],\n    title: \"Green chicken curry with coconut sambal\",\n    imageUrl: \"https://img.taste.com.au/zc_lBooQ/w720-h480-cfill-q80/taste/2020/02/mar20_green-chicken-curry-with-coconut-sambal-158600-1.jpg\",\n    duration: 15,\n    ingredients: [\n      \"1 tbs vegetable oil\",\n      \"450g pkt Coles Made Easy Thai Green Chicken Stir Fry with Capsicum and Green Beans\",\n      \"250g pkt Coles Coconut Chilli Lime Rice\",\n      \"COCONUT SAMBAL:\",\n      \"1/2 cup finely chopped coriander\",\n      \"1/4 red onion, finely chopped\",\n      \"1/4 cup (20g) shredded coconut, toasted\",\n      \"2 tbs lime juice\"\n    ],\n    steps: [\n      \"Heat the oil in a wok or large deep frying pan over medium heat. Add the chicken mixture and cook, stirring occasionally, for 8 mins. Add 1/4 cup (60ml) of water and cook for 2 mins or until the chicken is cooked through.\",\n      \"Meanwhile, heat the rice in the microwave following packet directions.\",\n      \"To make the coconut sambal, combine the coriander, onion, coconut and lime juice in a small bowl. Season.\",\n      \"Divide rice and curry between serving bowls. Sprinkle with the coconut sambal.\"\n    ],\n    favorite: false\n  },\n  {\n    id: \"8\",\n    category: [\"5\",\"6\"],\n    title: \"Slow-cooker cauliflower korma\",\n    imageUrl: \"https://img.taste.com.au/jI_aBAUp/w643-h428-cfill-q90/taste/2018/07/slow-cooker-cauliflower-korma-1-139455-1.jpg\",\n    duration: 5,\n    ingredients: [\n      \"500ml (2 cups) Massel vegetable liquid stock\",\n      \"125ml (1/2 cup) tomato passata\",\n      \"60g (1/4 cup) korma curry paste\",\n      \"60ml (1/4 cup) pouring cream\",\n      \"2 teaspoons cornflour\",\n      \"1 ripe tomato, deseeded, finely chopped\",\n      \"Long fresh green chilli, sliced, to serve\",\n      \"Fresh coriander sprigs, to serve\",\n      \"Flaked almonds, toasted, to serve\",\n      \"Roti (optional), to serve\"\n    ],\n    steps: [\n      \"Whisk together the stock, passata and korma paste in a slow cooker. Place the cauliflower upside down in the mixture and turn to coat. Stand upright and cover. Cook on low for 5 hours or until the cauliflower is tender.\",\n      \"Baste the cauliflower with the liquid in the slow cooker. Combine the yoghurt, cream and cornflour in a small jug. Add to the slow cooker and stir to combine. Cook for a further 10 minutes or until the sauce has thickened.\",\n      \"Serve cauliflower sprinkled with tomato, chilli, coriander and almonds. Serve with roti, if using.\"\n    ],\n    favorite: false\n  },\n  {\n    id: \"9\",\n    category: [\"2\",\"3\",\"7\"],\n    title: \"Avocado and cucumber salad\",\n    imageUrl: \"https://img.taste.com.au/v_-QrRbu/w643-h428-cfill-q90/taste/2016/11/avocado-and-cucumber-salad-81197-1.jpeg\",\n    duration: 10,\n    ingredients: [\n      \"175g baby salad leaves\",\n      \"2 medium avocados, chopped\",\n      \"4 green onions, thinly sliced\",\n      \"2 Lebanese cucumbers, halved, thinly sliced\",\n      \"1/4 cup lemon juice\",\n      \"1/4 cup olive oil\"\n    ],\n    steps: [\n      \"Combine salad leaves, avocado, onion and cucumber in a bowl. Place lemon juice and oil in a screw-top jar. Season with salt.\"\n    ],\n    favorite: false\n  }\n];\n\nexport const RECIPES = {\n  available: MEALS,\n  favorites: []\n}\n\n","import axios from \"axios\";\n\nexport const FETCH_CATEGORIES = 'FETCH_CATEGORIES';\nexport const FETCH_FAVORITES = 'FETCH_FAVORITES';\nexport const TOGGLE_FAVORITE = 'TOGGLE_FAVORITE';\nexport const FETCH_RECIPES = 'FETCH_RECIPES';\nexport const FETCH_RECIPE_DETAILS = 'FETCH_RECIPE_DETAILS';\n\n\nconst ROOT_URL = \"https://banana-cupcake-51087.herokuapp.com/\";\n\nexport const toggleFavoriteButton = (id) => {\n    return { type: TOGGLE_FAVORITE, recipeId: id }\n}\n\nexport const fetchCategories = () => dispatch => {\n    axios.get(`${ROOT_URL}categories`\n    ).then(function (response) {\n      //console.log('response from fetchCategories: ', response)\n      dispatch({ type: FETCH_CATEGORIES, payload: response.data });\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\nexport const fetchRecipes = (catId) => dispatch => {\n    axios.get(`${ROOT_URL}categories/${catId}/recipes`\n    ).then(function (response) {\n      //console.log(\"response from fetchRecipes\", response.data[0].recipes)\n      dispatch({ type: FETCH_RECIPES, payload: response.data[0].recipes\n     });\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\nexport const fetchRecipeDetails = (catId, recId) => dispatch => {\n    axios.get(`${ROOT_URL}categories/${catId}/recipes/${recId}`\n    ).then(function (response) {\n      //console.log(\"response from fetchRecipeDetails\", response.data)\n      dispatch({ type: FETCH_RECIPE_DETAILS, payload: response.data\n     });\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\nexport const toggleFavorite = (catId, recId, favorite) => dispatch => {\n  const body = {\"favorite\": favorite }\n  axios.put(`${ROOT_URL}categories/${catId}/recipes/${recId}/toggleFavorite`, body)\n  .then(function (response) {\n    console.log(\"response from toggleFavorite actions\", response.data)\n    //dispatch({ type: FETCH_RECIPE_DETAILS, payload: response.data });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n  \nexport const fetchFavoriteRecipes = () => dispatch => {\n  axios.get(`${ROOT_URL}favorites`\n  ).then(function (response) {\n    //console.log(\"response from fetchFavoriteRecipes\", response.data)\n    dispatch({ type: FETCH_FAVORITES, payload: response.data\n   });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet , SafeAreaView, FlatList, TouchableOpacity, Platform, Dimensions} from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n } from 'react-native-responsive-screen';\nimport Constants from 'expo-constants';\nimport { RecyclerListView, DataProvider, LayoutProvider } from 'recyclerlistview';\n\nimport { Colors } from '../data/data';\nimport { fetchCategories } from '../store/actions/recipes';\nimport { TextInput } from 'react-native-gesture-handler';\n//https://reactnative.dev/docs/flatlist\n//https://reactnative.dev/docs/platform-specific-code\nconst SCREEN_WIDTH = Dimensions.get('window').width;\n\nconst CategoriesPage = props => {\n  const catList = useSelector(state => state.recipes.categories);\n  //console.log('catList from CategoriesPage:', catList)\n  //test: implementing RecyclerListView\n  // const newList = [];\n  // for(let i = 0; i < catList.length; i++) {\n  //   newList.push({\n  //     type:'NORMAL',\n  //     item: {\n  //       id: catList._id,\n  //       title: catList.title,\n  //       recipes: catList.recipes\n  //     }\n  //   })\n  // }\n\n  // let [currentList, setCurrentList] = useState([]);\n  // setCurrentList(currentList = new DataProvider((r1, r2) => r1 != r2).cloneWithRows(newList));\n  // console.log('currentList: ', currentList);\n\n  // const layoutProvider = new LayoutProvider((i) => {\n  //   return currentList.getDataForIndex(i).type;\n  // }, (type, dim) => {\n  //   switch (type) {\n  //     case 'NORMAL':\n  //       dim.width = SCREEN_WIDTH;\n  //       dim.height = 100;\n  //       break;\n  //     default:\n  //       dim.width = 0;\n  //       dim.height = 0;\n  //   }\n  // })\n\n  //end test\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const renderGridItem = itemData => {\n    return (\n      <TouchableOpacity\n        style={styles.gridItem}\n        onPress={() => {\n          props.navigation.navigate('CategoryRecipes', {\n            categoryId: itemData.item._id,\n            catTitle: itemData.item.title\n          });\n        }}\n      >\n        <View >\n          <Text style={styles.title}>{itemData.item.title.toUpperCase()}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  const rowRenderer = (type, data) => {\n    const { id, title, recipes } = data.item;\n    return (\n      <View>\n        <Text>{title}</Text>\n      </View>\n    )\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        keyExtractor={(item) => item._id}\n        data={catList.sort((a,b) => a.id-b.id)}\n        renderItem={renderGridItem}\n        //numColumns={2}\n      />    \n    </SafeAreaView>\n  );\n};\n\nexport const screenOptions = () =>  {\n  return {\n    headerTitle: 'Keto Recipes Categories',\n    headerStyle: {\n      backgroundColor: Colors.primaryColor,\n    },\n    headerTintColor: Colors.secondaryColor \n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  gridItem: {\n    flex: 1,\n    margin: 15,\n    width: wp('40%'),\n    //backgroundColor: '#c5e1a5',\n    borderColor: '#c5e1a5',\n    borderWidth: 2,\n    borderRadius: 25\n  },\n  title: {\n    fontFamily: 'open-sans',\n    fontSize: hp('1.6%'),\n    height: hp('5%'),\n    color: Colors.secondaryColor,\n    textAlign: 'center',\n    paddingTop: 15,\n    justifyContent: 'space-evenly', \n\n  }\n});\n\nexport default CategoriesPage;","import React, { useEffect }  from 'react';\nimport { View, Text, TextInput, Dimensions, StyleSheet, FlatList, TouchableOpacity, Platform, ImageBackground } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n } from 'react-native-responsive-screen';\n\nimport { Colors } from '../data/data';\nimport { fetchRecipes } from '../store/actions/recipes';\n\nconst CategoryRecipePage = props => {\n  //may need to use for web setup\n  const currentWindow = Dimensions.get('window');\n  //get category id from categories page \n  const catId = props.route.params.categoryId;\n  //console.log('category id from CategoryRecipePage: ', catId)\n\n  const recipes = useSelector( state => state.recipes.recipes)\n  //retrive recipes of selected category \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRecipes(catId));\n  }, [dispatch, catId])\n\n  function ListItem(items) {\n    const { id, image, title, duration, favorite, insideId } = items;\n    return (\n      <View style={styles.listItem} >\n        <TouchableOpacity \n          onPress={() => {\n            props.navigation.navigate('RecipeDetails', {\n                itemId: id,\n                recipeTitle: title,\n                catId: catId,\n                favorite: favorite,\n                insideId: insideId\n            });\n          }}          \n        >\n          <View key={id}>\n            <View style={{ ...styles.listRow}} >\n              <ImageBackground\n                source={{ uri: image }}\n                style={styles.bgImage}\n              >\n                <View style={styles.titleContainer} >\n                  <Text style={styles.title} numberOfLines={1} >\n                    {title}\n                  </Text>\n                </View>\n              </ImageBackground>\n            </View>\n            <View style={{ ...styles.listRow, ...styles.listDetail }} >\n              <Text style={styles.duration} >Duration: {duration} min</Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const renderListItem = itemData => {\n    return (\n      <ListItem\n        key={itemData.item._id}\n        id={itemData.item._id}\n        testId={itemData.item.id}\n        title={itemData.item.title}\n        image={itemData.item.imageUrl}\n        duration={itemData.item.duration}\n        favorite={itemData.item.favorite}\n        insideId={itemData.item.id}\n      />\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={recipes}\n        keyExtractor={(item) => item._id}\n        renderItem={renderListItem}\n        style={{ width: wp('100%') }}\n      />\n    </View>\n  );\n};\n\nexport const screenOptions = navData => {\n  const categoryTitle = navData.route.params.catTitle;\n\n  return {\n    headerTitle: `${categoryTitle}`,\n    headerStyle: {\n      backgroundColor: Colors.primaryColor,\n    },\n    headerTintColor: Colors.secondaryColor \n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15,\n  },\n  listItem: {\n    backgroundColor: '#f5f5f5',\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginVertical: 10,\n    marginHorizontal: Platform.OS === 'ios' ? 15 : (Platform.OS === 'android' ? 15 : 100),\n  },\n  bgImage: {\n    //have to adjust images size\n    width: Platform.OS === 'ios' ? Dimensions.get('screen').width : '',\n    height: Platform.OS === 'ios' ? Dimensions.get('screen').width*.5 : Dimensions.get('window').width*.2,\n    justifyContent: 'flex-end',\n    textAlign: 'center',\n  },\n  listRow: {\n    flexDirection: 'row'\n  },\n  listHeader: {\n    //height: hp('85%'),\n  },\n  listDetail: {\n    paddingHorizontal: 10,\n    alignItems: 'center',\n\n    //height: hp('5%'),\n    fontFamily: 'open-sans-bold',\n  },\n  titleContainer: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    paddingVertical: 5,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: hp('1.9%'),\n    color: 'white',\n    textAlign: 'center',\n  },\n  duration: {\n    fontFamily: 'open-sans',\n    fontSize: hp('1.7%'),\n  }\n});\n\nexport default CategoryRecipePage;","import * as React from 'react';\nimport { Text, View, TextStyle, ViewStyle, findNodeHandle, Button } from 'react-native';\nimport { MaterialIcons, Entypo } from '@expo/vector-icons';\nimport { ActionSheetOptions } from '@expo/react-native-action-sheet';\n\nconst icon = (name: string) => <MaterialIcons key={name} name={name} size={24} />;\n\ninterface Props {\n  title: string;\n  showActionSheetWithOptions: (\n    optons: ActionSheetOptions,\n    callback: (buttonIndex: number) => void\n  ) => void;\n  onSelection: (index: number) => void;\n  withTitle?: boolean;\n  withMessage?: boolean;\n  withIcons?: boolean;\n  withSeparators?: boolean;\n  withCustomStyles?: boolean;\n  withAnchor?: boolean;\n}\n\n// A custom button that shows examples of different share sheet configurations\nexport default class ShowActionSheetButton extends React.PureComponent<Props> {\n  static defaultProps = {\n    withTitle: false,\n    withMessage: false,\n    withIcons: false,\n    withSeparators: false,\n    withCustomStyles: false,\n    withAnchor: false,\n    onSelection: null,\n  };\n\n  _anchorRef = React.createRef<Button>();\n\n  _showActionSheet = () => {\n    const {\n      withAnchor,\n      withTitle,\n      withMessage,\n      withIcons,\n      withSeparators,\n      withCustomStyles,\n      onSelection,\n      showActionSheetWithOptions,\n    } = this.props;\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = ['Delete', 'Save', 'Share', 'Cancel'];\n    const icons = withIcons\n      ? [icon('delete'), icon('save'), icon('share'), icon('cancel')]\n      : undefined;\n    const title = withTitle ? 'Choose An Action' : undefined;\n    const message = withMessage\n      ? 'This library tries to mimic the native share sheets as close as possible.'\n      : undefined;\n    const destructiveButtonIndex = 0;\n    const cancelButtonIndex = 3;\n    const textStyle: TextStyle | undefined = withCustomStyles\n      ? {\n          fontSize: 20,\n          fontWeight: '500',\n          color: 'blue',\n        }\n      : undefined;\n    const titleTextStyle: TextStyle | undefined = withCustomStyles\n      ? {\n          fontSize: 24,\n          textAlign: 'center',\n          fontWeight: '700',\n          color: 'orange',\n        }\n      : undefined;\n    const messageTextStyle: TextStyle | undefined = withCustomStyles\n      ? {\n          fontSize: 12,\n          color: 'purple',\n          textAlign: 'right',\n        }\n      : undefined;\n    const containerStyle: ViewStyle | undefined = withCustomStyles\n      ? {\n          backgroundColor: 'lightgrey',\n        }\n      : undefined;\n    const anchor: number | null = this._anchorRef.current\n      ? findNodeHandle(this._anchorRef.current)\n      : null;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n        title,\n        message,\n        icons,\n        //iPad only\n        anchor: withAnchor && anchor ? anchor : undefined,\n        // Android only\n        tintIcons: true,\n        // Android only; default is true\n        showSeparators: withSeparators,\n        // Affects Android only; default is false\n        textStyle,\n        // Android only\n        titleTextStyle,\n        // Android only\n        messageTextStyle,\n        // Android only,\n        containerStyle,\n      },\n      (buttonIndex: number) => {\n        // Do something here depending on the button index selected\n        onSelection(buttonIndex);\n      }\n    );\n  };\n\n  render() {\n    const { title } = this.props;\n    return (\n      <View\n        style={{\n          margin: 6,\n        }}>\n        <Entypo.Button\n          name=\"code\"\n          backgroundColor=\"#3e3e3e\"\n          onPress={this._showActionSheet}\n          ref={this._anchorRef}>\n          <Text\n            style={{\n              fontSize: 15,\n              color: '#fff',\n            }}>\n            {title}\n          </Text>\n        </Entypo.Button>\n      </View>\n    );\n  }\n}\n","import React from 'react';\nimport { HeaderButton } from 'react-navigation-header-buttons';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport { Colors } from '../data/data';\n\nconst CustomHeaderButton = props => {\n  return (\n    <HeaderButton\n      {...props}\n      IconComponent={Ionicons}\n      iconSize={23}\n      color={ Colors.secondaryColor}\n    />\n  );\n};\n\nexport default CustomHeaderButton;","import React, { useEffect, useCallback } from 'react';\nimport { View, Text, ScrollView, StyleSheet, Platform, Dimensions, ImageBackground } from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n } from 'react-native-responsive-screen';\n import { connectActionSheet,   ActionSheetOptions, ActionSheetProps,} from '@expo/react-native-action-sheet';\n import { MaterialIcons, Entypo } from '@expo/vector-icons';\n import ShowActionSheetButton from '../components/ShowActionSheetButton';\n//https://github.com/facebookincubator/redux-react-hook\n//https://reactjs.org/docs/hooks-reference.html\n//https://react-redux.js.org/api/hooks\nimport { Colors } from '../data/data';\nimport HeaderButton from '../components/HeaderButton';\nimport { toggleFavorite, fetchRecipeDetails, fetchFavoriteRecipes, toggleFavoriteButton } from '../store/actions/recipes';\n\n// const ASProps = ActionSheetProps;\n\n// const ASState = {\n//   selectedIndex: number | null\n// }\n\nconst ListItem = items => {\n  return (\n    <View style={styles.listItem}>\n      <Text>{items.children}</Text>\n    </View>\n  );\n};\n\nconst RecipeDetailPage = (props, ASProps, ASState) => {\n  //const { showActionSheetWithOptions } = useActionSheet();\n  //const [selectedIndex, setSelectedIndex ] = useState(ASState.selectedIndex = null);\n\n  const catId = props.route.params.catId;\n  const itemId = props.route.params.itemId;\n  const insideId = props.route.params.insideId;\n\n  const currentRecipeIsFavorite = useSelector(state =>\n    state.recipes.favoriteRecipes.some(recipe => recipe.id === insideId)\n  );\n  //recipe to render\n  const selectedItem = useSelector( state => state.recipe.recipe)\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //console.log('from fethRecipeDetails')\n    dispatch(fetchRecipeDetails(catId, itemId));   \n  }, [dispatch, catId, itemId]);\n\n  useEffect(() => {\n    //console.log('from fetchFavoriteRecipes')\n    dispatch(fetchFavoriteRecipes());   \n  }, [dispatch]);\n\n  const toggleFavoriteHandler = useCallback(() => {\n    dispatch(\n      toggleFavoriteButton(insideId)\n    );   \n  }, [dispatch, currentRecipeIsFavorite]);\n\n  useEffect(() => {\n    props.navigation.setParams({ toggleFav: toggleFavoriteHandler });\n  }, [toggleFavoriteHandler]);\n\n  useEffect(() => {\n    props.navigation.setParams({ favorite: currentRecipeIsFavorite });\n    //update DB for current recipe, set favorite to currentRecipeIsFavorite value\n    dispatch(toggleFavorite(catId, itemId, currentRecipeIsFavorite));\n  }, [currentRecipeIsFavorite]);\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <View style={styles.imageContainer}>\n          <ImageBackground source={{ uri: selectedItem.imageUrl }} style={styles.image} />\n        </View>\n        <View style={styles.details}>\n          <Text>Duration: {selectedItem.duration} min</Text>\n        </View>\n        <Text style={styles.title}>Ingredients</Text>\n        {selectedItem.ingredients.map(ingredient => (\n          <ListItem key={ingredient}>{ingredient}</ListItem>\n        ))}\n        <Text style={styles.title}>Steps</Text>\n        {selectedItem.steps.map(step => (\n          <ListItem key={step}>{step}</ListItem>\n        ))}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport const screenOptions = navData => {\n  const recipeTitle = navData.route.params.recipeTitle;\n  const toggleFav = navData.route.params.toggleFav;\n  const isFavorite = navData.route.params.favorite;\n\n  return {\n    headerTitle: ` ${recipeTitle}`,\n    headerStyle: {\n      backgroundColor: Colors.primaryColor,\n    },\n    headerTintColor: Colors.secondaryColor,\n    headerRight: () =>\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Favorite\"\n          iconName={isFavorite ? \"ios-heart\" : \"ios-heart-empty\"}\n          onPress={toggleFav}\n        />\n      </HeaderButtons>\n  };\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 15,\n  },\n  imageContainer: {\n    marginVertical: 10,\n    marginHorizontal: Platform.OS === 'ios' ? 5 : (Platform.OS === 'android' ? 20 : 50),\n  },\n  image: {\n    width: Platform.OS === 'ios' ? Dimensions.get('screen').width : Dimensions.get('window').width*.8,\n    height: Platform.OS === 'ios' ? Dimensions.get('screen').width*.5 : Dimensions.get('window').width*.2,\n    //justifyContent: 'flex-end',\n  },\n  details: {\n    flexDirection: 'row',\n    padding: 5,\n    marginLeft: 20,\n    //textAlign: 'left',\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: hp('1.9%'),\n    textAlign: 'center',\n    color: Colors.secondaryColor\n  },\n  listItem: {\n    marginVertical: 5,\n    marginHorizontal: Platform.OS === 'ios' ? 40 : (Platform.OS === 'android' ? 20 : 200),\n    padding: 5\n  }\n});\n\nconst ConnectedApp = connectActionSheet(RecipeDetailPage)\n\nexport default ConnectedApp;","import React, { useEffect }  from 'react';\nimport { View, Text, Dimensions, SafeAreaView, StyleSheet, FlatList, TouchableOpacity, Platform, ImageBackground } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n } from 'react-native-responsive-screen';\n import { Ionicons } from '@expo/vector-icons';\n\nimport { Colors } from '../data/data';\nimport { fetchFavoriteRecipes } from '../store/actions/recipes';\n\nconst FavoritesPage = props => {\n  const recipes = useSelector( state => state.recipes.favoriteRecipes);\n  //const catId = props.route.params.categoryId;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //console.log('from fetchFavoriteRecipes')\n    dispatch(fetchFavoriteRecipes());   \n  }, [dispatch]);\n\n  function ListItem(items) {\n    const { id, image, title, duration, favorite, insideId } = items;\n    return (\n      <View style={styles.listItem} key={id} >\n        <TouchableOpacity \n          onPress={() => {\n            props.navigation.navigate('RecipeDetails', {\n                itemId: id,\n                recipeTitle: title,\n                //catId: catId,\n                favorite: favorite,\n                insideId: insideId\n            });\n          }}          \n        >\n          <View key={id}>\n            <View style={{ ...styles.listRow, ...styles.listHeader }} key={id} >\n              <ImageBackground\n                source={{ uri: image }}\n                style={styles.bgImage}\n              >\n                <View style={styles.titleContainer} >\n                  <Text style={styles.title} numberOfLines={1} >\n                    {title}\n                  </Text>\n                </View>\n              </ImageBackground>\n            </View>\n            <View style={{ ...styles.listRow, ...styles.listDetail }} >\n                <Text style={styles.duration} >Duration: {duration} min</Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const renderListItem = itemData => {\n    return (\n      <ListItem\n        key={itemData.item._id}\n        id={itemData.item._id}\n        testId={itemData.item.id}\n        title={itemData.item.title}\n        image={itemData.item.imageUrl}\n        duration={itemData.item.duration}\n        favorite={itemData.item.favorite}\n        insideId={itemData.item.id}\n      />\n    );\n  };\n\n  if (recipes.length === 0 ) {\n    return (\n      <View style={styles.container}>\n        <Text>No favorite recipes found.</Text>\n      </View>\n    )\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={recipes}\n        keyExtractor={(item) => item._id}\n        renderItem={renderListItem}\n        style={{ width: wp('100%') }}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport const screenOptions = () =>  {\n  return {\n    headerTitle: 'Favorite Recipes',\n    headerStyle: {\n      backgroundColor: Colors.primaryColor,\n    },\n    headerTintColor: Colors.secondaryColor \n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    padding: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  listItem: {\n    backgroundColor: '#f5f5f5',\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginVertical: 10,\n    marginHorizontal: Platform.OS === 'ios' ? 15 : (Platform.OS === 'android' ? 15 : 100),\n  },\n  bgImage: {\n    //have to adjust images size\n    width: Platform.OS === 'ios' ? Dimensions.get('screen').width : '',\n    height: Platform.OS === 'ios' ? Dimensions.get('screen').width*.5 : Dimensions.get('window').width*.2,\n    justifyContent: 'flex-end',\n  },\n  listRow: {\n    flexDirection: 'row',\n\n  },\n  listHeader: {\n    //height: hp('85%'),\n  },\n  listDetail: {\n    paddingHorizontal: 10,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    fontFamily: 'open-sans-bold',\n  },\n  titleContainer: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    paddingVertical: 5,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontFamily: 'open-sans-bold',\n    fontSize: hp('1.9%'),\n    color: 'white',\n    textAlign: 'center'\n  },\n  duration: {\n    fontFamily: 'open-sans',\n    fontSize: hp('1.7%'),\n  }\n});\n\nexport default FavoritesPage;","export const menBMR = (weight, height, age) => {\n    const calories = (\n      66 +\n      6.3 * weight +\n      12.9 * height -\n      6.8 * age\n    ).toFixed();\n    return calories;\n  };\n  \n  export const womenBMR = (weight, height, age) => {\n    const calories = (\n      655 +\n      4.3 * weight +\n      4.7 * height -\n      4.7 * age\n    ).toFixed();\n    return calories;\n  };\n  \n  export const activityIndicator = (dailyCalories, activity) => {\n    if (activity === \"bmr\") {\n      return dailyCalories;\n    }\n    if (activity === \"sedentary\") {\n      return (dailyCalories * 1.2).toFixed();\n    }\n    if (activity === \"moderate\") {\n      return (dailyCalories * 1.375).toFixed();\n    }\n    if (activity === \"mild\") {\n      return dailyCalories * (1.55).toFixed();\n    }\n    if (activity === \"heavy\") {\n      return (dailyCalories * 1.725).toFixed();\n    }\n    if (activity === \"extreme\") {\n      return (dailyCalories * 1.9).toFixed();\n    }\n  };\n\n   export const activityFactors = {\n    extreme: 1.9,\n    heavy: 1.725,\n    mild: 1.375,\n    moderate: 1.55,\n    sedentary: 1.2\n  };","import React, { useState, useRef, useEffect } from 'react';\nimport { View, ScrollView, Text, TextInput, StyleSheet, Platform, Picker, TouchableOpacity, Keyboard, Button }  from 'react-native';\nimport { CheckBox } from 'react-native-elements'\nimport { Ionicons } from '@expo/vector-icons';\nimport {\n    heightPercentageToDP as hp,\n    widthPercentageToDP as wp,\n   } from 'react-native-responsive-screen';\nimport { menBMR, womenBMR, activityIndicator } from \"../utils/helper\";\nimport { Colors } from '../data/data';\n\n// const UseFocus = () => {\n//     console.log('focus changed')\n//     const htmlElRef = useRef(null)\n//     const setFocus = () => {htmlElRef.current &&  htmlElRef.current.focus()}\n\n//     return [ htmlElRef,  setFocus ] \n// }\n\nconst CaloriesCalculator = props => {\n    //reset all calculator parameters when back from result page\n    const resetCalculator = reset || null;\n    if (resetCalculator) reset();\n\n    const [gender, setGender] = useState('female');\n    const [age, setAge] = useState('');\n    //const [inputAgeRef, setInputAgeFocus] = UseFocus()\n    //console.log('inputAge:' , inputAgeRef)\n    //console.log('setFocus: ', setInputAgeFocus)\n\n    const [weight, setWeight] = useState('');\n    //const [inputWeightRef, setInputWeightFocus] = UseFocus()\n    const [feet, setFeet] = useState('');\n    //const [inputFeetRef, setInputFeetFocus] = UseFocus()\n    const [inches, setInches] = useState('');\n    //const [inputInchesRef, setInputInchesFocus] = UseFocus()\n    const [activity, setActivityFactor] = useState('bmr');\n    const [dailyCalories, setDailyCalories] = useState('');\n    const [showResult, setShowResult] = useState(false);\n    const [inputs, setInputs] = useState({});\n    const [reset, setReset] = useState(false);\n\n    const focusNextField = (id) => {\n        inputs[id].focus()\n        console.log('inputs fields: ', inputs[id])\n    }\n\n    const calculateCalories = () => {\n        let height = (feet*12 + parseInt(inches)) ;\n        let daily = '';\n\n        if (gender === 'male') {\n            daily = menBMR(weight, height, age);\n            daily = activityIndicator(daily, activity);\n            setDailyCalories( daily );\n\n        }\n        if (gender === 'female') {\n            daily = womenBMR(weight, height, age);\n            daily = activityIndicator(daily, activity);\n            setDailyCalories( daily );\n            console.log('dailyCalories: ', daily)\n        }\n        // //console.log('dailyCalories: ', dailyCalories)\n        // if (daily !== '' && daily !== NaN) {\n        //     setShowResult(true);\n        // }\n    };\n\n    function Separator() {\n        return <View style={styles.separator} />;\n    }\n    \n    function InputForm() {\n        return (\n            <ScrollView>\n                <View style={styles.container}>\n                    <View style={styles.checkBoxContainer}>\n                        <CheckBox\n                            checked={gender === 'male' ? true : false}\n                            onPress={ () => { setGender('male') }}\n                        />\n                        <Text style={{marginTop: 20, fontSize: hp('1.8%'),fontFamily: 'open-sans',color: Colors.secondaryColor,}}> Male</Text>\n                        <CheckBox\n                            checked={gender === 'female' ? true : false}\n                            onPress={ () => { setGender('female') }}\n                        />\n                        <Text style={{marginTop: 20, fontSize: hp('1.8%'),fontFamily: 'open-sans',color: Colors.secondaryColor,}}>Female</Text>\n                    </View>\n                    <View style={styles.ageWeight}>\n                        <Text style={styles.label}>How old are you? </Text>\n                        <TextInput\n                            style={styles.input}\n                            autoCapitalize='none'\n                            autoCorrect={false}\n                            placeholder=\"21\"\n                            returnKeyType={ 'next' }\n                            blurOnSubmit={ false }\n                            value={age}\n                            keyboardType='numeric'\n                            numberOfLines={1}\n                            onChangeText={text => {\n                                setAge(text)\n                            }}\n                            onSubmitEditing={() => {\n                                setInputs('weight')\n                                focusNextField('weight')                            }}\n                            //ref={inputAgeRef}\n                        />\n                    </View>   \n                    <View style={styles.ageWeight}>\n                        <Text style={styles.label}>How much do you weight? </Text>\n                        <TextInput\n                            style={styles.input}   \n                            autoCapitalize='none'  \n                            autoCorrect={false}                       \n                            placeholder=\"152\"\n                            blurOnSubmit={ false }\n                            value={weight}\n                            keyboardType=\"numeric\"\n                            onChangeText={text => setWeight(text)}\n                            onSubmitEditing={() => {\n                                setInputs('feet')\n                                focusNextField('feet')\n                            }}\n                            returnKeyType={ 'next' }\n                            ref={input => inputs['weight'] = input}\n                        />\n                    </View>  \n                    <View style={styles.height}>\n                            <Text style={styles.label}>How tall are you?  </Text>\n                            <TextInput\n                                style={styles.input}\n                                autoCapitalize='none'\n                                autoCorrect={false}\n                                placeholder=\"0\"\n                                blurOnSubmit={ false }\n                                value={feet}\n                                keyboardType=\"numeric\"\n                                onChangeText={text => setFeet(text)}\n                                onSubmitEditing={() => {\n                                    setInputs('inches')\n                                    focusNextField('inches')\n                                }}\n                                returnKeyType={ 'next' }\n                                ref={input => inputs['feet'] = input}\n                            />\n                            <Text style={styles.label}>ft</Text>\n                            <Text style={styles.label}></Text>\n                            <TextInput\n                                style={styles.input}\n                                autoCapitalize='none'\n                                autoCorrect={false}\n                                placeholder=\"00\"\n                                returnKeyType={ \"done\" }\n                                blurOnSubmit={ false }\n                                value={inches}\n                                keyboardType=\"numeric\"\n                                onChangeText={text=> setInches(text)}\n                            />\n                            <Text style={styles.label}>in</Text>\n                        </View>\n                    <View style={styles.formControl}>\n                        <Text style={styles.label}>How active are you on daily basis?  </Text>\n                        <View style={styles.pickerContainer}>\n                            <Picker\n                                style={{ minHeight: 40, width: 300, color: Colors.secondaryColor }}\n                                selectedValue={activity}\n                                onValueChange={(itemValue, itemIndex) => setActivityFactor(itemValue)}\n                            >\n                                <Picker.Item\n                                    label=\"Basal Metabolic Rate (BMR)\"\n                                    value=\"bmr\"\n                                />\n                                <Picker.Item\n                                    label=\"Sedentary - little or no exercise\"\n                                    value=\"sedentary\"\n                                />\n                                <Picker.Item\n                                    label=\"Moderate - exercise 1-3 times/week\"\n                                    value=\"moderate\"\n                                />\n                                <Picker.Item\n                                    label=\"Mild - exercise 3-5 times/week\"\n                                    value=\"mild\"\n                                />\n                                <Picker.Item\n                                    label=\"Heavy - exercise 6-7 times/week\"\n                                    value=\"heavy\"\n                                />\n                                <Picker.Item\n                                    label=\"Extreme - exercise(twice/day)\"\n                                    value=\"extreme\"\n                                />\n                            </Picker>\n                        </View>\n                    </View>\n                </View>\n                <View style={styles.calculateButtonContainer}>\n                    <TouchableOpacity\n                        onPress={calculateCalories}\n                    >\n                    <Text style={{color: Colors.secondaryColor}}>CALCULATE</Text>\n                    </TouchableOpacity>\n                </View>\n            </ScrollView>\n        );\n    }\n\n    function CalculationResult() {\n        console.log('props from Calc page: ', props.navigation)\n        console.log('dailyCalories after calculation: ', dailyCalories)\n\n        return (\n            \n            <View style={styles.container}>\n                <Text>Your personal result: {dailyCalories}.</Text>\n                <View style={styles.resetButtonContainer}>\n                    <TouchableOpacity\n                        onPress={() => Reset()}\n                    >\n                    <Text style={{color: Colors.secondaryColor}}>RESET</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        )\n    }\n\n    function Reset() {\n        setReset(false)\n        setGender('');\n        setAge('');\n        setWeight('');\n        setFeet('');\n        setInches('');\n        setActivityFactor('bmr');\n        setDailyCalories('');\n        setShowResult(false);\n    }\n\n    return (\n        <View>\n            <InputForm /> \n            { (dailyCalories !== '' && dailyCalories !== NaN) ? (\n                props.navigation.navigate('CalculationResult', {\n                    dailyCalories: dailyCalories,\n                })\n               \n            ) : null }\n        </View>\n         \n\n    );\n}\n//md-calculator\nexport const screenOptions = () =>  {\n    return {\n      headerTitle: 'Daily Calories Calculator',\n      headerStyle: {\n        backgroundColor: Colors.primaryColor,\n      },\n      headerTintColor: Colors.secondaryColor \n    }\n  }\n  \n  const styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    formControl: {\n      width: '80%',\n      flexDirection: 'row'\n    },\n    label: {\n        color: Colors.secondaryColor,\n        fontFamily: 'open-sans',\n        fontSize: hp('1.8%'),\n        marginVertical: 8,\n        //marginEnd: 10,\n        marginStart: 10\n\n    },\n    input: {\n      paddingHorizontal: 2,\n      paddingVertical: 5,\n      borderBottomColor: '#ccc',\n      borderBottomWidth: 1,\n      width: '10%',\n      alignContent: 'space-between'\n    },\n    pickerContainer: {\n        // flex:1,\n        // fontSize: hp('1.2%'),\n        // alignItems: Platform.OS === 'ios' ? 'flex-end' : (Platform.OS === 'android' ? 'flex-start' : 'flex-start'),\n        // width: wp('100%'),\n    },\n    calculateButtonContainer: {\n        borderColor: '#c5e1a5',\n        borderWidth: 2,\n        borderRadius: 25,\n        marginLeft: '35%',\n        width: wp('30%'),\n        padding: 10,\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        marginTop: Platform.OS === 'ios' ? 200 : (Platform.OS === 'android' ? 150 : 150)\n    },\n    resetButtonContainer: {\n        borderColor: '#c5e1a5',\n        borderWidth: 2,\n        borderRadius: 25,\n        width: wp('20%'),\n        padding: 10,\n        //justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        marginTop: Platform.OS === 'ios' ? 200 : (Platform.OS === 'android' ? 150 : 150)\n    },\n    calculateButtonText: {\n        fontSize: hp('1.9%'),\n    },\n    checkBoxContainer: {\n        flexDirection: 'row',\n        alignContent: \"space-between\",\n        justifyContent: \"space-around\",\n        marginTop: 20,\n    },\n    separator: {\n        marginVertical: 5,\n        borderBottomColor: '#737373',\n        borderBottomWidth: StyleSheet.hairlineWidth,\n    },\n    height: {\n        flexDirection: 'row',\n        marginBottom: 20\n    },\n    ageWeight: {\n        flexDirection: 'row',\n        marginBottom: 20\n    }\n  });\n\n\n  \nexport default CaloriesCalculator;\n","import React from 'react';\nimport { View, Text, StyleSheet , SafeAreaView, FlatList, TouchableOpacity, Platform, Button} from 'react-native';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n } from 'react-native-responsive-screen';\nimport Constants from 'expo-constants';\nimport { Colors } from '../data/data';\n\nconst CalculationResultPage = props => {\n  //console.log('props from result page: ', props)\n  \n  const result = props.route.params.dailyCalories;\n\n  return (\n    <View style={styles.container}>\n        <Text>Your personal result: {result}</Text>\n        <TouchableOpacity\n            onPress={() => {\n              props.navigation.push('Calculator', {\n                reset: true,\n              })\n            }}\n          >\n          <Text style={styles.resetButton}>BACK TO CALCULATOR</Text>\n        </TouchableOpacity>\n    </View>\n  );\n\n};\n\nexport const screenOptions = () =>  {\n  return {\n    headerTitle: 'Daily Calories Calculation Result',\n    headerStyle: {\n      backgroundColor: Colors.primaryColor,\n    },\n    headerTintColor: Colors.secondaryColor \n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: wp('100%'),\n  },\n  resetButton: {\n    marginTop: 20,\n    borderColor: '#c5e1a5',\n    borderWidth: 2,\n    borderRadius: 25,\n    width: wp('40%'),\n    color: Colors.secondaryColor,\n    padding: 10,\n    justifyContent: 'center',\n    alignItems: \"center\",\n    alignContent: 'center'\n  }\n});\n\nexport default CalculationResultPage;","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport CategoriesPage, {screenOptions as categoriesPageOptions}  from '../pages/CategoriesPage';\nimport CategoryRecipePage, {screenOptions as categoryRecipePageOptions}  from '../pages/CategoryRecipePage';\nimport RecipeDetailPage, {screenOptions as recipeDetailsPageOptions}  from '../pages/RecipeDetailPage';\nimport FavoritesPage, {screenOptions as favoritesPageOptions}  from '../pages/FavoritesPage';\nimport CaloriesCalculator, {screenOptions as calculatorPageOptions}  from '../pages/CaloriesCalculator';\nimport CalculationResultPage, {screenOptions as calculationResultPageOptions}  from '../pages/CalculationResultPage';\nimport { Colors } from '../data/data';\n\nconst defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Colors.primaryColor\n  },\n  headerTitleStyle: {\n    fontFamily: 'open-sans'\n  },\n  headerBackTitleStyle: {\n    fontFamily: 'open-sans'\n  },\n  headerTintColor: Platform.OS === 'ios' ? Colors.primaryColor : 'white'\n};\n\nconst AppStackNavigator = createStackNavigator();\n\nexport const AppNavigator = () => {\n  return (\n    <AppStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <AppStackNavigator.Screen\n        name=\"Categories\"\n        component={CategoriesPage}\n        options={categoriesPageOptions}\n      />\n      <AppStackNavigator.Screen\n        name=\"CategoryRecipes\"\n        component={CategoryRecipePage}\n        options={categoryRecipePageOptions}\n      />\n      <AppStackNavigator.Screen\n        name=\"RecipeDetails\"\n        component={RecipeDetailPage}\n        options={recipeDetailsPageOptions}\n        path={'recipe-details'}\n      />\n    </AppStackNavigator.Navigator>\n  );\n};\n\nconst FavStackNavigator = createStackNavigator();\n\nexport const FavNavigator = () => {\n  return (\n    <FavStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <FavStackNavigator.Screen\n        name=\"Favorites\"\n        component={FavoritesPage}\n        options={favoritesPageOptions}\n      />\n    </FavStackNavigator.Navigator>\n  );\n};\n\nconst CalculatorStackNavigator = createStackNavigator();\n\nexport const CalcNavigator = () => {\n  return (\n    <CalculatorStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <CalculatorStackNavigator.Screen\n        name=\"Calculator\"\n        component={CaloriesCalculator}\n        options={calculatorPageOptions}\n      />\n      <CalculatorStackNavigator.Screen\n        name=\"CalculationResult\"\n        component={CalculationResultPage}\n        options={calculationResultPageOptions}\n        initialParams={{ dailyCalories: '' }}\n      />\n    </CalculatorStackNavigator.Navigator>\n  );\n};\n\n// const CalculatResultStackNavigator = createStackNavigator();\n\n// export const CalcResultNavigator = () => {\n//   return (\n//     <CalculatResultStackNavigator.Navigator screenOptions={defaultNavOptions}>\n//       <CalculatResultStackNavigator.Screen\n//         name=\"CalculationResult\"\n//         component={CalculationResultPage}\n//         options={calculationResultPageOptions}\n//         initialParams={{ dailyCalories: '2222222' }}\n//       />\n//     </CalculatResultStackNavigator.Navigator>\n//   );\n// };\n\nconst Tab = createBottomTabNavigator();\n\nexport const AppTabs = () => {\n  return (\n    <Tab.Navigator\n        initialRouteName=\"Categories\"\n        tabBarOptions={{\n          activeTintColor: Colors.primaryColor,\n        }}\n    >\n      <Tab.Screen \n        name=\"Categories\" \n        component={AppNavigator}\n        options={{\n          tabBarLabel: 'Categories',\n          tabBarIcon: () => (\n            <Ionicons name=\"ios-home\" size={25} color={Colors.secondaryColor} />\n          ),\n        }}\n      />\n      <Tab.Screen \n        name=\"Calculator\" \n        component={CalcNavigator}\n        options={{\n          tabBarLabel: 'Calculator',\n          tabBarIcon: () => (\n            <Ionicons name=\"ios-calculator\" size={25} color={Colors.secondaryColor} />\n          ),\n        }}\n      />\n      <Tab.Screen \n        name=\"Favorites\" \n        component={FavNavigator} \n        options={{\n          tabBarLabel: 'Favorites',\n          tabBarIcon: () => (\n            <Ionicons name=\"ios-heart\" size={25} color={Colors.secondaryColor} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n","\nimport { MEALS } from '../../data/data';\nimport { FETCH_FAVORITES, FETCH_CATEGORIES, FETCH_RECIPES, TOGGLE_FAVORITE } from '../actions/recipes';\n\nconst DEFAULT_STATE = {\n    categories: [],\n    recipes: [],\n    favoriteRecipe: {\n      id: '',\n      category: [],\n      title: '',\n      imageUrl: '',\n      duration: 0,\n      date_created: '',\n      ingredients: [],\n      steps: [],\n      favorite: ''\n    },\n    favoriteRecipes: [],\n    testRecipes: MEALS\n}\n//https://banana-cupcake-51087.herokuapp.com/\n\nexport default function(state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case FETCH_CATEGORIES:\n          return { ...state, categories: action.payload };\n        case FETCH_RECIPES:\n            return { ...state, recipes: action.payload };\n        case FETCH_FAVORITES:\n          return { ...state, favoriteRecipes: action.payload };\n        case TOGGLE_FAVORITE:\n          const existingIndex = state.favoriteRecipes.findIndex(\n            recipe => recipe.id === action.recipeId\n          );\n          if (existingIndex >= 0) {\n            const updatedFavRecipes = [...state.favoriteRecipes];\n            updatedFavRecipes.splice(existingIndex, 1);\n            return { ...state, favoriteRecipes: updatedFavRecipes };\n          } else {\n            const recipe = state.testRecipes.find(recipe => recipe.id === action.recipeId);\n            return { ...state, favoriteRecipes: state.favoriteRecipes.concat(recipe) };\n          }\n        default:\n          return state;\n      }\n    };\n","import { FETCH_RECIPE_DETAILS } from '../actions/recipes';\n\nconst DEFAULT_STATE = {\n    recipe: {\n        id: '',\n        category: [],\n        title: '',\n        imageUrl: '',\n        duration: 0,\n        date_created: '',\n        ingredients: [],\n        steps: [],\n        favorite: ''\n    }\n}\n\nexport default function(state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case FETCH_RECIPE_DETAILS:\n          return Object.assign({}, state, {\n            recipe: action.payload\n            })\n        default:\n          return state;\n      }\n    };","import React, { useState } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading, Linking } from 'expo';\nimport { SafeAreaProvider  } from 'react-native-safe-area-context';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { NavigationContainer, useLinking } from '@react-navigation/native';\nimport { ActionSheetProvider } from '@expo/react-native-action-sheet';\n//react native navigation https://reactnavigation.org/docs/4.x/getting-started/\nimport { AppNavigator, AppTabs } from './navigation/AppNavigator';\nimport recipesReducer from './store/reducers/recipesReducer';\nimport singleRecipeReducer from './store/reducers/singleRecipeReducer';\n\nconst rootReducer = combineReducers({\n  recipes: recipesReducer,\n  recipe: singleRecipeReducer\n})\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nconst prefix = Linking.makeUrl('/')\n//console.log('prefix: ', prefix)\nconst config = {\n  RecipeDetails: {\n    path: \"recipe-details\", //?\n    initialRouteName: \"RecipeDetails\",\n    screens: {\n      RecipeDetails: \"recipe-details\",\n    }\n  },\n};\n\nconst fetchFonts = () => {\n  return Font.loadAsync({\n    'open-sans': require('./assets/fonts/OpenSans-Regular.ttf'),\n    'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf')\n  });\n};\n\nexport default function App() {\n  // useState to load fonts\n  const [fontLoaded, setFontLoaded] = useState(false);\n  //from example: have to use AppLoading component of Expo so fonts will be loaded first\n  const ref = React.useRef();\n\n  const { getInitialState } = useLinking(ref, {\n    prefixes: [prefix],\n    config\n  });\n\n  const [isReady, setIsReady] = React.useState(false);\n  const [initialState, setInitialState] = React.useState();\n\n  React.useEffect(() => {\n    getInitialState()\n      .catch(() => {})\n      .then(state => {\n        if (state !== undefined) {\n          setInitialState(state);\n        }\n\n        setIsReady(true);\n      });\n  }, [getInitialState]);\n\n  if (!isReady) {\n    return null;\n  }\n\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={() => setFontLoaded(true)}\n      />\n    );\n  };\n\n  return (\n    <ActionSheetProvider>\n    <Provider store={store}>\n      <SafeAreaProvider>\n        <NavigationContainer >\n          <AppTabs initialState={initialState} />\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </Provider>\n    </ActionSheetProvider>\n\n\n  );\n}\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/keto-diet-recipes/expo-service-worker.js', { scope: '/keto-diet-recipes/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Bold.ttf\";"],"sourceRoot":""}